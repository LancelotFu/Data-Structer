/************************************************
*************************************************/
#include <iostream>
using namespace std;

const int MaxSize = 10;
/************************************************
* 定义顺序栈
*************************************************/
typedef struct {
	int data[MaxSize];
	int top; //栈顶指针
}SqStack;

/************************************************
* 刚开始的时候栈是没有元素的
*************************************************/
void InitStack(SqStack& S) {
	S.top = -1;
}

/************************************************
* 在压入栈的时候首先判断栈是否为满，如果满了就返回失败
* 然后对top值加一，代表准备在该位置压入栈顶元素
*************************************************/
bool Push(SqStack& S, int x) {
	if (S.top == MaxSize - 1) {
		return false;
	}
	S.top = S.top + 1;
	S.data[S.top] = x;
	return true;
}

/************************************************
* 出栈时栈顶元素出栈，然后栈顶指针减一
*************************************************/
bool Pop(SqStack& S, int& x) {
	if (S.top == -1) {
		return false;
	}
	x = S.data[S.top];
	S.top = S.top - 1;
	return true;
}

/************************************************
* 读取栈顶的元素
* 首先判断是否为空，然后对栈顶进行记录
*************************************************/
bool GetTop(SqStack S, int& x) {
	if (S.top == -1) {
		return false;
	}
	x = S.data[S.top];
	return true;
}